// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Capstone Alterra Group 7",
            "url": "https://github.com/capstone-alterra-group-7"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/admin/article": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new article",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Article"
                ],
                "summary": "Create a new article",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Image file",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Title article",
                        "name": "title",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Description article",
                        "name": "description",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Label article",
                        "name": "label",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dtos.ArticleCreeatedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/dtos.ForbiddenResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/article/{id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update article",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Article"
                ],
                "summary": "Update article",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID article",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Image file",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Title article",
                        "name": "title",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Description article",
                        "name": "description",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Label article",
                        "name": "label",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.ArticleStatusOKResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/dtos.ForbiddenResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a article",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Article"
                ],
                "summary": "Delete a article",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID article",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.StatusOKDeletedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/dtos.ForbiddenResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/dashboard": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get dashboard",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Dashboard"
                ],
                "summary": "Get dashboard",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.DashboardStatusOKResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/dtos.ForbiddenResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/hotel": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new hotel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Hotel"
                ],
                "summary": "Create a new hotel",
                "parameters": [
                    {
                        "description": "Payload Body [RAW]",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.HotelInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dtos.HotelCreeatedResponses"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/dtos.ForbiddenResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/hotel-room": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new hotel room",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Hotel Room"
                ],
                "summary": "Create a new hotel room",
                "parameters": [
                    {
                        "description": "Payload Body [RAW]",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.HotelRoomInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dtos.HotelRoomCreeatedResponses"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/dtos.ForbiddenResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/hotel-room/{id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update hotel room",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Hotel Room"
                ],
                "summary": "Update hotel room",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID Hotel Room",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Payload Body [RAW]",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.HotelRoomInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.HotelRoomStatusOKResponses"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/dtos.ForbiddenResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a hotel room",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Hotel Room"
                ],
                "summary": "Delete a hotel room",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID Hotel Room",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.StatusOKDeletedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/dtos.ForbiddenResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/hotel/{id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update hotel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Hotel"
                ],
                "summary": "Update hotel",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID hotel",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Payload Body [RAW]",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.HotelInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.HotelStatusOKResponses"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/dtos.ForbiddenResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a hotel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Hotel"
                ],
                "summary": "Delete a hotel",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID Hotel",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.StatusOKDeletedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/dtos.ForbiddenResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/order/hotel": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Hotel Order User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Order"
                ],
                "summary": "Get Hotel Order User",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Hotel rating class",
                        "name": "rating_class",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search hotel name",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Date start",
                        "name": "date_start",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Date end",
                        "name": "date_end",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Order by name",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by status order",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.GetAllHotelOrderStatusOKResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/dtos.ForbiddenResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/order/hotel/detail": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Hotel Order User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Order"
                ],
                "summary": "Get Hotel Order User",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Hotel Order ID",
                        "name": "hotel_order_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.HotelOrderStatusOKResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/dtos.ForbiddenResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/order/ticket": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Ticket Order User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Order"
                ],
                "summary": "Get Ticket Order User",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search train name",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Date start",
                        "name": "date_start",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Date end",
                        "name": "date_end",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Order by name",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by status order",
                        "name": "filter",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.GetAllTicketTravelerDetailOrderStatusOKResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/dtos.ForbiddenResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/order/ticket/detail": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Ticket Order User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Order"
                ],
                "summary": "Get Ticket Order User",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Ticket Order ID",
                        "name": "ticket_order_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Train ID",
                        "name": "train_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.TicketTravelerDetailOrderStatusOKResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/dtos.ForbiddenResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/payment": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new payment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Payment"
                ],
                "summary": "Create a new payment",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Image file",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Type payment",
                        "name": "type",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name payment",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Account name payment",
                        "name": "account_name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Account number payment",
                        "name": "account_number",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dtos.PaymentCreeatedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/dtos.ForbiddenResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/payment/{id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update payment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Payment"
                ],
                "summary": "Update payment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID payment",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Image file",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Type payment",
                        "name": "type",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name payment",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Account name payment",
                        "name": "account_name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Account number payment",
                        "name": "account_number",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.PaymentStatusOKResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/dtos.ForbiddenResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a payment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Payment"
                ],
                "summary": "Delete a payment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID payment",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.StatusOKDeletedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/dtos.ForbiddenResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/station": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all stations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Station"
                ],
                "summary": "Get all stations",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search data",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by name",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter data",
                        "name": "filter",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.GetAllStationStatusOKResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/dtos.ForbiddenResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new station",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Station"
                ],
                "summary": "Create a new station",
                "parameters": [
                    {
                        "description": "Payload Body [RAW]",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.StationInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dtos.StationCreeatedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/dtos.ForbiddenResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/station/{id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update station",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Station"
                ],
                "summary": "Update station",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID station",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Payload Body [RAW]",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.StationInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.StationStatusOKResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/dtos.ForbiddenResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a station",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Station"
                ],
                "summary": "Delete a station",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID station",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.StatusOKDeletedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/dtos.ForbiddenResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/train": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all train",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Train"
                ],
                "summary": "Get all train",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search data",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by name",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter data",
                        "name": "filter",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.GetAllTrainStatusOKResponses"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/dtos.ForbiddenResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new train",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Train"
                ],
                "summary": "Create a new train",
                "parameters": [
                    {
                        "description": "Payload Body [RAW]",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.TrainInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dtos.TrainCreeatedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/dtos.ForbiddenResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/train-carriage": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new train carriage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Train Carriage"
                ],
                "summary": "Create a new train carriage",
                "parameters": [
                    {
                        "description": "Payload Body [RAW]",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dtos.TrainCarriageInput"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dtos.TrainCarriageCreeatedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/dtos.ForbiddenResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/train-carriage/{id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update train carriage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Train Carriage"
                ],
                "summary": "Update train carriage",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID train carriage",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Payload Body [RAW]",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.TrainCarriageInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.TrainCarriageStatusOKResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/dtos.ForbiddenResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a train carriage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Train Carriage"
                ],
                "summary": "Delete a train carriage",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID train carriage",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.StatusOKDeletedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/dtos.ForbiddenResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/train/{id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update train",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Train"
                ],
                "summary": "Update train",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID train",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Payload Body [RAW]",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.TrainInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.TrainStatusOKResponses"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/dtos.ForbiddenResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a train",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Train"
                ],
                "summary": "Delete a train",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID train",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.StatusOKDeletedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/dtos.ForbiddenResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/user": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - User"
                ],
                "summary": "Get all users",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search data",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by name",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter data",
                        "name": "filter",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.GetAllUserStatusOKResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/dtos.ForbiddenResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/user/detail": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get detail user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - User"
                ],
                "summary": "Get detail user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Update deleted user",
                        "name": "isDeleted",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.GetAllUserStatusOKResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/dtos.ForbiddenResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/user/register": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Register an account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - User"
                ],
                "summary": "Register user",
                "parameters": [
                    {
                        "description": "Payload Body [RAW]",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.UserRegisterInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dtos.UserCreeatedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/dtos.ForbiddenResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/user/update/{id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Register an account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - User"
                ],
                "summary": "Update user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID user",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Payload Body [RAW]",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.UserRegisterInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dtos.UserCreeatedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/dtos.ForbiddenResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Login an account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User - Account"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "Payload Body [RAW]",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.UserLoginInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.UserStatusOKResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/dtos.ForbiddenResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/public/article": {
            "get": {
                "description": "Get all articles",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Article"
                ],
                "summary": "Get all articles",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.GetAllArticleStatusOKResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/dtos.ForbiddenResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/public/article/{id}": {
            "get": {
                "description": "Get article by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Article"
                ],
                "summary": "Get article by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID article",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.ArticleStatusOKResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/dtos.ForbiddenResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/public/cloudinary/file-upload": {
            "post": {
                "description": "Upload file to cloudinary",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cloudinary"
                ],
                "summary": "Upload file",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Photo file",
                        "name": "file",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.StatusOKResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/dtos.ForbiddenResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/public/cloudinary/url-upload": {
            "post": {
                "description": "Upload file to cloudinary",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cloudinary"
                ],
                "summary": "Upload file",
                "parameters": [
                    {
                        "description": "Payload Body [RAW]",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Url"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.StatusOKResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/dtos.ForbiddenResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/public/hotel": {
            "get": {
                "description": "Get all hotel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Hotel"
                ],
                "summary": "Get all hotel",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.GetAllHotelStatusOKResponses"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/dtos.ForbiddenResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/public/hotel-room": {
            "get": {
                "description": "Get all hotel room",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Hotel Room"
                ],
                "summary": "Get all hotel room",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.GetAllHotelRoomStatusOKResponses"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/dtos.ForbiddenResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/public/hotel-room/{id}": {
            "get": {
                "description": "Get hotel room by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Hotel Room"
                ],
                "summary": "Get hotel room by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID Hotel Room",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.HotelRoomStatusOKResponses"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/dtos.ForbiddenResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/public/hotel/{id}": {
            "get": {
                "description": "Get hotel by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Hotel"
                ],
                "summary": "Get hotel by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID Hotel",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.HotelByIDStatusOKResponses"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/dtos.ForbiddenResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/public/payment": {
            "get": {
                "description": "Get all payments",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Payment"
                ],
                "summary": "Get all payments",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.GetAllPaymentStatusOKResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/dtos.ForbiddenResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/public/payment/{id}": {
            "get": {
                "description": "Get payment by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Payment"
                ],
                "summary": "Get payment by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID payment",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.PaymentStatusOKResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/dtos.ForbiddenResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/public/station": {
            "get": {
                "description": "Get all stations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Station"
                ],
                "summary": "Get all stations",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.GetAllStationStatusOKResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/dtos.ForbiddenResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/public/station/{id}": {
            "get": {
                "description": "Get station by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Station"
                ],
                "summary": "Get station by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID station",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.StationStatusOKResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/dtos.ForbiddenResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/public/train": {
            "get": {
                "description": "Get all train",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Train"
                ],
                "summary": "Get all train",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.GetAllTrainStatusOKResponses"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/dtos.ForbiddenResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/public/train-carriage": {
            "get": {
                "description": "Get all train carriage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Train Carriage"
                ],
                "summary": "Get all train carriage",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Train id",
                        "name": "train_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Class train",
                        "name": "class",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Date order",
                        "name": "date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Status train",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.GetAllTrainCarriageStatusOKResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/dtos.ForbiddenResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/public/train-carriage/{id}": {
            "get": {
                "description": "Get train carriage by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Train Carriage"
                ],
                "summary": "Get train carriage by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID train carriage",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.TrainCarriageStatusOKResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/dtos.ForbiddenResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/public/train/{id}": {
            "get": {
                "description": "Get train by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Train"
                ],
                "summary": "Get train by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID train",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.TrainStatusOKResponses"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/dtos.ForbiddenResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "Register an account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User - Account"
                ],
                "summary": "Register",
                "parameters": [
                    {
                        "description": "Payload Body [RAW]",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.UserRegisterInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dtos.UserCreeatedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/dtos.ForbiddenResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/user": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "User get credentials",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User - Account"
                ],
                "summary": "Get Credentials",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.UserStatusOKResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/dtos.ForbiddenResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/delete-photo-profile": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "User update an information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User - Account"
                ],
                "summary": "Update Information",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.UserStatusOKResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/dtos.ForbiddenResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/history-search": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all history search",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User - History Search"
                ],
                "summary": "Get all history search",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.HistorySearchStatusOKResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/dtos.ForbiddenResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new history search",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User - History Search"
                ],
                "summary": "Create a new history search",
                "parameters": [
                    {
                        "description": "Payload Body [RAW]",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.HistorySearchInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dtos.HistorySearchCreeatedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/dtos.ForbiddenResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/history-search/{id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a history search",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User - History Search"
                ],
                "summary": "Delete a history search",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID history search",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.StatusOKDeletedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/dtos.ForbiddenResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/hotel/order": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Order Hotel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User - Hotel"
                ],
                "summary": "Order Hotel",
                "parameters": [
                    {
                        "description": "Payload Body [RAW]",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.HotelOrderInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dtos.HotelOrderCreeatedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/dtos.ForbiddenResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update Order Hotel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User - Hotel"
                ],
                "summary": "Update Order Hotel",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Hotel Order ID",
                        "name": "hotel_order_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Update Status Order ID",
                        "name": "status",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.HotelOrderStatusOKResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/dtos.ForbiddenResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/hotel/search": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Search Hotel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User - Hotel"
                ],
                "summary": "Search Hotel Available",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter minimum price",
                        "name": "minimum_price",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter maximum price",
                        "name": "maximum_price",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter rating class",
                        "name": "rating_class",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search address hotel",
                        "name": "address",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search name hotel",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by price",
                        "name": "sort_by_price",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.GetAllHotelStatusOKResponses"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/dtos.ForbiddenResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/notification/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get notification by user id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user - Hotel"
                ],
                "summary": "Get notification by user id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "user id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.GetNotificationByUserIDStatusOKResponses"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/dtos.ForbiddenResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/order/hotel": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Hotel Order User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User - Order"
                ],
                "summary": "Get Hotel Order User",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by status order",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.GetAllHotelOrderStatusOKResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/dtos.ForbiddenResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/order/hotel/detail": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Hotel Order User by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User - Order"
                ],
                "summary": "Get Hotel Order User by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Hotel Order ID",
                        "name": "hotel_order_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.HotelOrderStatusOKResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/dtos.ForbiddenResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/order/ticket": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Ticket Order User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User - Order"
                ],
                "summary": "Get Ticket Order User",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by status order",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.GetAllTicketTravelerDetailOrderStatusOKResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/dtos.ForbiddenResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/order/ticket/detail": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Ticket Order User by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User - Order"
                ],
                "summary": "Get Ticket Order User by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Ticket Order ID",
                        "name": "ticket_order_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Train ID",
                        "name": "train_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.TicketTravelerDetailOrderStatusOKResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/dtos.ForbiddenResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/train/order": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Order ticket KA",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User - Train"
                ],
                "summary": "Order ticket KA",
                "parameters": [
                    {
                        "description": "Payload Body [RAW]",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.TicketOrderInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dtos.TicketOrderCreeatedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/dtos.ForbiddenResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update Order ticket KA",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User - Train"
                ],
                "summary": "Update Order ticket KA",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Ticket Order ID",
                        "name": "ticket_order_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Update Status Order ID",
                        "name": "status",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.TicketOrderStatusOKResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/dtos.ForbiddenResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/train/search": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Search Train",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User - Train"
                ],
                "summary": "Search Train Available",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Station origin id",
                        "name": "station_origin_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Station destination id",
                        "name": "station_destination_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Filter by train id",
                        "name": "sort_by_train_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by class name",
                        "name": "sort_by_class",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by price",
                        "name": "sort_by_price",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by arrive time",
                        "name": "sort_by_arrive_time",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.GetAllTrainStatusOKResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/dtos.ForbiddenResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/update-password": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "User update an password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User - Account"
                ],
                "summary": "Update Password",
                "parameters": [
                    {
                        "description": "Payload Body [RAW]",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.UserUpdatePasswordInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.UserStatusOKResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/dtos.ForbiddenResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/update-photo-profile": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "User update an photo profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User - Account"
                ],
                "summary": "Update Photo Profile",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Photo file",
                        "name": "file",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.UserStatusOKResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/dtos.ForbiddenResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/update-profile": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "User update an profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User - Account"
                ],
                "summary": "Update Profile",
                "parameters": [
                    {
                        "description": "Payload Body [RAW]",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.UserUpdateProfileInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.UserStatusOKResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.UnauthorizedResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/dtos.ForbiddenResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.NotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.InternalServerErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dtos.ArticleCreeatedResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dtos.ArticleResponse"
                },
                "message": {
                    "type": "string",
                    "example": "Successfully created article"
                },
                "status_code": {
                    "type": "integer",
                    "example": 201
                }
            }
        },
        "dtos.ArticleResponse": {
            "type": "object",
            "properties": {
                "article_id": {
                    "type": "integer",
                    "example": 1
                },
                "created_at": {
                    "type": "string",
                    "example": "2023-05-17T15:07:16.504+07:00"
                },
                "description": {
                    "type": "string",
                    "example": "Description"
                },
                "image": {
                    "type": "string",
                    "example": "image.png"
                },
                "label": {
                    "type": "string",
                    "example": "Label"
                },
                "title": {
                    "type": "string",
                    "example": "Title"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2023-05-17T15:07:16.504+07:00"
                }
            }
        },
        "dtos.ArticleStatusOKResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dtos.ArticleResponse"
                },
                "message": {
                    "type": "string",
                    "example": "Successfully get article"
                },
                "status_code": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "dtos.BadRequestResponse": {
            "type": "object",
            "properties": {
                "errors": {},
                "message": {
                    "type": "string",
                    "example": "Bad Request"
                },
                "status_code": {
                    "type": "integer",
                    "example": 400
                }
            }
        },
        "dtos.DashboardResponse": {
            "type": "object",
            "properties": {
                "count_order": {},
                "count_train": {},
                "count_user": {},
                "new_order": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": true
                    }
                },
                "new_user": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": true
                    }
                }
            }
        },
        "dtos.DashboardStatusOKResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dtos.DashboardResponse"
                },
                "message": {
                    "type": "string",
                    "example": "Successfully get dashboard"
                },
                "status_code": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "dtos.ForbiddenResponse": {
            "type": "object",
            "properties": {
                "errors": {},
                "message": {
                    "type": "string",
                    "example": "Forbidden"
                },
                "status_code": {
                    "type": "integer",
                    "example": 403
                }
            }
        },
        "dtos.GetAllArticleStatusOKResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dtos.ArticleResponse"
                },
                "message": {
                    "type": "string",
                    "example": "Successfully get article"
                },
                "meta": {
                    "$ref": "#/definitions/helpers.Meta"
                },
                "status_code": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "dtos.GetAllHotelOrderStatusOKResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dtos.HotelOrderResponse"
                },
                "message": {
                    "type": "string",
                    "example": "Successfully get ticket order"
                },
                "meta": {
                    "$ref": "#/definitions/helpers.Meta"
                },
                "status_code": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "dtos.GetAllHotelRoomStatusOKResponses": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dtos.HotelRoomResponse"
                },
                "message": {
                    "type": "string",
                    "example": "Successfully get hotel room"
                },
                "meta": {
                    "$ref": "#/definitions/helpers.Meta"
                },
                "status_code": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "dtos.GetAllHotelStatusOKResponses": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dtos.HotelResponse"
                },
                "message": {
                    "type": "string",
                    "example": "Successfully get hotel"
                },
                "meta": {
                    "$ref": "#/definitions/helpers.Meta"
                },
                "status_code": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "dtos.GetAllPaymentStatusOKResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dtos.PaymentResponse"
                },
                "message": {
                    "type": "string",
                    "example": "Successfully get station"
                },
                "meta": {
                    "$ref": "#/definitions/helpers.Meta"
                },
                "status_code": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "dtos.GetAllStationStatusOKResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dtos.StationResponse"
                },
                "message": {
                    "type": "string",
                    "example": "Successfully get station"
                },
                "meta": {
                    "$ref": "#/definitions/helpers.Meta"
                },
                "status_code": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "dtos.GetAllTicketTravelerDetailOrderStatusOKResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dtos.TicketTravelerDetailOrderResponse"
                },
                "message": {
                    "type": "string",
                    "example": "Successfully get ticket order"
                },
                "meta": {
                    "$ref": "#/definitions/helpers.Meta"
                },
                "status_code": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "dtos.GetAllTrainCarriageStatusOKResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dtos.TrainCarriageResponse"
                },
                "message": {
                    "type": "string",
                    "example": "Successfully get train carriage"
                },
                "meta": {
                    "$ref": "#/definitions/helpers.Meta"
                },
                "status_code": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "dtos.GetAllTrainStatusOKResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dtos.TrainResponse"
                },
                "message": {
                    "type": "string",
                    "example": "Successfully get train"
                },
                "meta": {
                    "$ref": "#/definitions/helpers.Meta"
                },
                "status_code": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "dtos.GetAllTrainStatusOKResponses": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dtos.TrainResponses"
                },
                "message": {
                    "type": "string",
                    "example": "Successfully get train"
                },
                "meta": {
                    "$ref": "#/definitions/helpers.Meta"
                },
                "status_code": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "dtos.GetAllUserStatusOKResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dtos.UserInformationResponse"
                },
                "message": {
                    "type": "string",
                    "example": "Successfully get station"
                },
                "meta": {
                    "$ref": "#/definitions/helpers.Meta"
                },
                "status_code": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "dtos.GetNotificationByUserIDStatusOKResponses": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dtos.NotificationResponse"
                },
                "message": {
                    "type": "string",
                    "example": "Successfully get notification"
                },
                "status_code": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "dtos.HistorySearchCreeatedResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dtos.HistorySearchResponse"
                },
                "message": {
                    "type": "string",
                    "example": "Successfully created history search"
                },
                "status_code": {
                    "type": "integer",
                    "example": 201
                }
            }
        },
        "dtos.HistorySearchInput": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "dtos.HistorySearchResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "dtos.HistorySearchStatusOKResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dtos.HistorySearchResponse"
                },
                "message": {
                    "type": "string",
                    "example": "Successfully get history search"
                },
                "status_code": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "dtos.HotelByIDResponse": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "class": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string",
                    "example": "2023-05-17T15:07:16.504+07:00"
                },
                "description": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "hotel_facilities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.HotelFacilitiesResponse"
                    }
                },
                "hotel_id": {
                    "type": "integer"
                },
                "hotel_image": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.HotelImageResponse"
                    }
                },
                "hotel_policy": {
                    "$ref": "#/definitions/dtos.HotelPoliciesResponse"
                },
                "hotel_room": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.HotelRoomHotelIDResponse"
                    }
                },
                "name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2023-05-17T15:07:16.504+07:00"
                }
            }
        },
        "dtos.HotelByIDResponses": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "class": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string",
                    "example": "2023-05-17T15:07:16.504+07:00"
                },
                "description": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "hotel_facilities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.HotelFacilitiesResponse"
                    }
                },
                "hotel_id": {
                    "type": "integer"
                },
                "hotel_image": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.HotelImageResponse"
                    }
                },
                "hotel_policy": {
                    "$ref": "#/definitions/dtos.HotelPoliciesResponse"
                },
                "hotel_room": {
                    "$ref": "#/definitions/dtos.HotelRoomHotelIDResponse"
                },
                "name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2023-05-17T15:07:16.504+07:00"
                }
            }
        },
        "dtos.HotelByIDStatusOKResponses": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dtos.HotelByIDResponse"
                },
                "message": {
                    "type": "string",
                    "example": "Successfully get hotel"
                },
                "status_code": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "dtos.HotelCreeatedResponses": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dtos.HotelResponse"
                },
                "message": {
                    "type": "string",
                    "example": "Successfully created hotel"
                },
                "status_code": {
                    "type": "integer",
                    "example": 201
                }
            }
        },
        "dtos.HotelFacilitiesInput": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "dtos.HotelFacilitiesResponse": {
            "type": "object",
            "properties": {
                "hotel_id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dtos.HotelImageInput": {
            "type": "object",
            "properties": {
                "image_url": {
                    "type": "string"
                }
            }
        },
        "dtos.HotelImageResponse": {
            "type": "object",
            "properties": {
                "hotel_id": {
                    "type": "integer"
                },
                "image_url": {
                    "type": "string"
                }
            }
        },
        "dtos.HotelInput": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "class": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "hotel_facilities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.HotelFacilitiesInput"
                    }
                },
                "hotel_image": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.HotelImageInput"
                    }
                },
                "hotel_policy": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.HotelPoliciesInput"
                    }
                },
                "name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                }
            }
        },
        "dtos.HotelOrderCreeatedResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dtos.HotelOrderResponse"
                },
                "message": {
                    "type": "string",
                    "example": "Successfully created ticket order"
                },
                "status_code": {
                    "type": "integer",
                    "example": 201
                }
            }
        },
        "dtos.HotelOrderInput": {
            "type": "object",
            "properties": {
                "date_end": {
                    "type": "string",
                    "example": "2023-05-02"
                },
                "date_start": {
                    "type": "string",
                    "example": "2023-05-01"
                },
                "email_order": {
                    "type": "string",
                    "example": "me@hanifz.com"
                },
                "hotel_room_id": {
                    "description": "HotelID          int                   ` + "`" + `form:\"hotel_id\" json:\"hotel_id\" example:\"1\"` + "`" + `",
                    "type": "integer",
                    "example": 1
                },
                "name_order": {
                    "type": "string",
                    "example": "Mochammad Hanif"
                },
                "payment_id": {
                    "type": "integer",
                    "example": 1
                },
                "phone_number_order": {
                    "type": "string",
                    "example": "085115151515"
                },
                "quantity_adult": {
                    "type": "integer",
                    "example": 1
                },
                "quantity_infant": {
                    "type": "integer",
                    "example": 1
                },
                "special_request": {
                    "type": "string",
                    "example": "Tambah 1 Bed"
                },
                "traveler_detail": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.TravelerDetailInput"
                    }
                }
            }
        },
        "dtos.HotelOrderResponse": {
            "type": "object",
            "properties": {
                "check_in_date": {
                    "type": "string",
                    "example": "2023-05-01"
                },
                "check_out_date": {
                    "type": "string",
                    "example": "2023-05-02"
                },
                "created_at": {
                    "type": "string",
                    "example": "2023-05-17T15:07:16.504+07:00"
                },
                "email_order": {
                    "type": "string",
                    "example": "me@hanifz.com"
                },
                "hotel": {
                    "$ref": "#/definitions/dtos.HotelByIDResponses"
                },
                "hotel_order_id": {
                    "type": "integer",
                    "example": 1
                },
                "name_order": {
                    "type": "string",
                    "example": "Mochammad Hanif"
                },
                "number_of_night": {
                    "type": "integer",
                    "example": 1
                },
                "payment": {
                    "$ref": "#/definitions/dtos.PaymentResponses"
                },
                "phone_number_order": {
                    "type": "string",
                    "example": "085115151515"
                },
                "price": {
                    "type": "integer",
                    "example": 50000
                },
                "quantity_adult": {
                    "type": "integer",
                    "example": 1
                },
                "quantity_infant": {
                    "type": "integer",
                    "example": 1
                },
                "special_request": {
                    "type": "string",
                    "example": "Minta 1 Bed"
                },
                "status": {
                    "type": "string",
                    "example": "unpaid"
                },
                "ticket_order_code": {
                    "type": "string",
                    "example": "RANDOMCODE123"
                },
                "total_amount": {
                    "type": "integer",
                    "example": 50000
                },
                "traveler_detail": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.TravelerDetailResponse"
                    }
                },
                "updated_at": {
                    "type": "string",
                    "example": "2023-05-17T15:07:16.504+07:00"
                }
            }
        },
        "dtos.HotelOrderStatusOKResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dtos.HotelOrderResponse"
                },
                "message": {
                    "type": "string",
                    "example": "Successfully get ticket order"
                },
                "status_code": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "dtos.HotelPoliciesInput": {
            "type": "object",
            "properties": {
                "is_breakfast": {
                    "type": "boolean"
                },
                "is_check_in_check_out": {
                    "type": "boolean"
                },
                "is_check_in_early": {
                    "type": "boolean"
                },
                "is_check_out_overdue": {
                    "type": "boolean"
                },
                "is_pet": {
                    "type": "boolean"
                },
                "is_policy_canceled": {
                    "type": "boolean"
                },
                "is_policy_minimum_age": {
                    "type": "boolean"
                },
                "is_smoking": {
                    "type": "boolean"
                },
                "policy_minimum_age": {
                    "type": "integer"
                },
                "time_breakfast_end": {
                    "type": "string"
                },
                "time_breakfast_start": {
                    "type": "string"
                },
                "time_check_in": {
                    "type": "string"
                },
                "time_check_out": {
                    "type": "string"
                }
            }
        },
        "dtos.HotelPoliciesResponse": {
            "type": "object",
            "properties": {
                "hotel_id": {
                    "type": "integer"
                },
                "is_breakfast": {
                    "type": "boolean"
                },
                "is_check_in_check_out": {
                    "type": "boolean"
                },
                "is_check_in_early": {
                    "type": "boolean"
                },
                "is_check_out_overdue": {
                    "type": "boolean"
                },
                "is_pet": {
                    "type": "boolean"
                },
                "is_policy_canceled": {
                    "type": "boolean"
                },
                "is_policy_minimum_age": {
                    "type": "boolean"
                },
                "is_smoking": {
                    "type": "boolean"
                },
                "policy_minimum_age": {
                    "type": "integer"
                },
                "time_breakfast_end": {
                    "type": "string"
                },
                "time_breakfast_start": {
                    "type": "string"
                },
                "time_check_in": {
                    "type": "string"
                },
                "time_check_out": {
                    "type": "string"
                }
            }
        },
        "dtos.HotelResponse": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "class": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string",
                    "example": "2023-05-17T15:07:16.504+07:00"
                },
                "description": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "hotel_facilities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.HotelFacilitiesResponse"
                    }
                },
                "hotel_id": {
                    "type": "integer"
                },
                "hotel_image": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.HotelImageResponse"
                    }
                },
                "hotel_policy": {
                    "$ref": "#/definitions/dtos.HotelPoliciesResponse"
                },
                "hotel_room_start": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2023-05-17T15:07:16.504+07:00"
                }
            }
        },
        "dtos.HotelRoomCreeatedResponses": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dtos.HotelRoomResponse"
                },
                "message": {
                    "type": "string",
                    "example": "Successfully created hotel room"
                },
                "status_code": {
                    "type": "integer",
                    "example": 201
                }
            }
        },
        "dtos.HotelRoomFacilitiesInput": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "dtos.HotelRoomFacilitiesResponse": {
            "type": "object",
            "properties": {
                "hotel_id": {
                    "type": "integer"
                },
                "hotel_room_id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dtos.HotelRoomHotelIDResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "discount": {
                    "type": "integer"
                },
                "discount_price": {
                    "type": "integer"
                },
                "hotel_id": {
                    "type": "integer"
                },
                "hotel_room_facility": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.HotelRoomFacilitiesResponse"
                    }
                },
                "hotel_room_id": {
                    "type": "integer"
                },
                "hotel_room_image": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.HotelRoomImageResponse"
                    }
                },
                "mattress_size": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "normal_price": {
                    "type": "integer"
                },
                "number_of_guest": {
                    "type": "integer"
                },
                "number_of_mattress": {
                    "type": "integer"
                },
                "quantity_of_room": {
                    "type": "integer"
                },
                "size_of_room": {
                    "type": "integer"
                }
            }
        },
        "dtos.HotelRoomImageInput": {
            "type": "object",
            "properties": {
                "image_url": {
                    "type": "string"
                }
            }
        },
        "dtos.HotelRoomImageResponse": {
            "type": "object",
            "properties": {
                "hotel_id": {
                    "type": "integer"
                },
                "hotel_room_id": {
                    "type": "integer"
                },
                "image_url": {
                    "type": "string"
                }
            }
        },
        "dtos.HotelRoomInput": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "discount": {
                    "type": "integer"
                },
                "hotel_id": {
                    "type": "integer"
                },
                "hotel_room_facility": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.HotelRoomFacilitiesInput"
                    }
                },
                "hotel_room_image": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.HotelRoomImageInput"
                    }
                },
                "mattress_size": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "normal_price": {
                    "type": "integer"
                },
                "number_of_guest": {
                    "type": "integer"
                },
                "number_of_mattress": {
                    "type": "integer"
                },
                "quantity_of_room": {
                    "type": "integer"
                },
                "size_of_room": {
                    "type": "integer"
                }
            }
        },
        "dtos.HotelRoomResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2023-05-17T15:07:16.504+07:00"
                },
                "description": {
                    "type": "string"
                },
                "discount": {
                    "type": "integer"
                },
                "discount_price": {
                    "type": "integer"
                },
                "hotel_id": {
                    "type": "integer"
                },
                "hotel_room_facility": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.HotelRoomFacilitiesResponse"
                    }
                },
                "hotel_room_id": {
                    "type": "integer"
                },
                "hotel_room_image": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.HotelRoomImageResponse"
                    }
                },
                "mattress_size": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "normal_price": {
                    "type": "integer"
                },
                "number_of_guest": {
                    "type": "integer"
                },
                "number_of_mattress": {
                    "type": "integer"
                },
                "quantity_of_room": {
                    "type": "integer"
                },
                "size_of_room": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2023-05-17T15:07:16.504+07:00"
                }
            }
        },
        "dtos.HotelRoomStatusOKResponses": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dtos.HotelRoomResponse"
                },
                "message": {
                    "type": "string",
                    "example": "Successfully get hotel room"
                },
                "status_code": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "dtos.HotelStatusOKResponses": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dtos.HotelResponse"
                },
                "message": {
                    "type": "string",
                    "example": "Successfully get hotel"
                },
                "status_code": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "dtos.InternalServerErrorResponse": {
            "type": "object",
            "properties": {
                "errors": {},
                "message": {
                    "type": "string",
                    "example": "Internal Server Error"
                },
                "status_code": {
                    "type": "integer",
                    "example": 500
                }
            }
        },
        "dtos.NotFoundResponse": {
            "type": "object",
            "properties": {
                "errors": {},
                "message": {
                    "type": "string",
                    "example": "Not Found"
                },
                "status_code": {
                    "type": "integer",
                    "example": 404
                }
            }
        },
        "dtos.NotificationResponse": {
            "type": "object",
            "properties": {
                "notification_content": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.TemplateMessageByUserIDResponse"
                    }
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "dtos.PaymentCreeatedResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dtos.PaymentResponse"
                },
                "message": {
                    "type": "string",
                    "example": "Successfully created station"
                },
                "status_code": {
                    "type": "integer",
                    "example": 201
                }
            }
        },
        "dtos.PaymentResponse": {
            "type": "object",
            "properties": {
                "account_name": {
                    "type": "string",
                    "example": "PT Tripease"
                },
                "account_number": {
                    "type": "string",
                    "example": "00832982893221132"
                },
                "created_at": {
                    "type": "string",
                    "example": "2023-05-17T15:07:16.504+07:00"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "image_url": {
                    "type": "string",
                    "example": "bca.png"
                },
                "name": {
                    "type": "string",
                    "example": "Bank Central Asia"
                },
                "type": {
                    "type": "string",
                    "example": "Virtual Account"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2023-05-17T15:07:16.504+07:00"
                }
            }
        },
        "dtos.PaymentResponses": {
            "type": "object",
            "properties": {
                "account_name": {
                    "type": "string",
                    "example": "PT Tripease"
                },
                "account_number": {
                    "type": "string",
                    "example": "00832982893221132"
                },
                "created_at": {
                    "type": "string",
                    "example": "2023-05-17T15:07:16.504+07:00"
                },
                "image_url": {
                    "type": "string",
                    "example": "bca.png"
                },
                "name": {
                    "type": "string",
                    "example": "Bank Central Asia"
                },
                "payment_id": {
                    "type": "integer",
                    "example": 1
                },
                "type": {
                    "type": "string",
                    "example": "Virtual Account"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2023-05-17T15:07:16.504+07:00"
                }
            }
        },
        "dtos.PaymentStatusOKResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dtos.PaymentResponse"
                },
                "message": {
                    "type": "string",
                    "example": "Successfully get station"
                },
                "status_code": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "dtos.StationCreeatedResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dtos.StationResponse"
                },
                "message": {
                    "type": "string",
                    "example": "Successfully created station"
                },
                "status_code": {
                    "type": "integer",
                    "example": 201
                }
            }
        },
        "dtos.StationInput": {
            "type": "object",
            "properties": {
                "initial": {
                    "type": "string",
                    "example": "PSE"
                },
                "name": {
                    "type": "string",
                    "example": "Pasar Senen"
                },
                "origin": {
                    "type": "string",
                    "example": "Jakarta"
                }
            }
        },
        "dtos.StationResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2023-05-17T15:07:16.504+07:00"
                },
                "deleted_at": {
                    "type": "string",
                    "example": "2023-05-17T15:07:16.504+07:00"
                },
                "initial": {
                    "type": "string",
                    "example": "PSE"
                },
                "name": {
                    "type": "string",
                    "example": "Pasar Senen"
                },
                "origin": {
                    "type": "string",
                    "example": "Jakarta"
                },
                "station_id": {
                    "type": "integer",
                    "example": 1
                },
                "updated_at": {
                    "type": "string",
                    "example": "2023-05-17T15:07:16.504+07:00"
                }
            }
        },
        "dtos.StationResponseSimply": {
            "type": "object",
            "properties": {
                "arrive_time": {
                    "type": "string",
                    "example": "00:00"
                },
                "initial": {
                    "type": "string",
                    "example": "PSE"
                },
                "name": {
                    "type": "string",
                    "example": "Pasar Senen"
                },
                "origin": {
                    "type": "string",
                    "example": "Jakarta"
                },
                "station_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dtos.StationStatusOKResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dtos.StationResponse"
                },
                "message": {
                    "type": "string",
                    "example": "Successfully get station"
                },
                "status_code": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "dtos.StatusOKDeletedResponse": {
            "type": "object",
            "properties": {
                "errors": {},
                "message": {
                    "type": "string",
                    "example": "Successfully deleted"
                },
                "status_code": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "dtos.StatusOKResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string",
                    "example": "Successfully"
                },
                "status_code": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "dtos.TemplateMessageByUserIDResponse": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string",
                    "example": "2023-05-17T15:07:16.504+07:00"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2023-05-17T15:07:16.504+07:00"
                }
            }
        },
        "dtos.TicketOrderCreeatedResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dtos.TicketOrderResponse"
                },
                "message": {
                    "type": "string",
                    "example": "Successfully created ticket order"
                },
                "status_code": {
                    "type": "integer",
                    "example": 201
                }
            }
        },
        "dtos.TicketOrderInput": {
            "type": "object",
            "properties": {
                "email_order": {
                    "type": "string",
                    "example": "me@hanifz.com"
                },
                "name_order": {
                    "type": "string",
                    "example": "Mochammad Hanif"
                },
                "payment_id": {
                    "type": "integer",
                    "example": 1
                },
                "phone_number_order": {
                    "type": "string",
                    "example": "085115151515"
                },
                "quantity_adult": {
                    "type": "integer",
                    "example": 1
                },
                "quantity_infant": {
                    "type": "integer",
                    "example": 1
                },
                "ticket_traveler_detail_departure": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.TicketTravelerDetailInput"
                    }
                },
                "ticket_traveler_detail_return": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.TicketTravelerDetailInput"
                    }
                },
                "traveler_detail": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.TravelerDetailInput"
                    }
                },
                "with_return": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "dtos.TicketOrderResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2023-05-17T15:07:16.504+07:00"
                },
                "email_order": {
                    "type": "string",
                    "example": "me@hanifz.com"
                },
                "name_order": {
                    "type": "string",
                    "example": "Mochammad Hanif"
                },
                "payment": {
                    "$ref": "#/definitions/dtos.PaymentResponses"
                },
                "phone_number_order": {
                    "type": "string",
                    "example": "085115151515"
                },
                "price": {
                    "type": "integer",
                    "example": 50000
                },
                "quantity_adult": {
                    "type": "integer",
                    "example": 1
                },
                "quantity_infant": {
                    "type": "integer",
                    "example": 1
                },
                "status": {
                    "type": "string",
                    "example": "unpaid"
                },
                "ticket_order_code": {
                    "type": "string",
                    "example": "RANDOMCODE123"
                },
                "ticket_order_id": {
                    "type": "integer",
                    "example": 1
                },
                "ticket_traveler_detail": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.TicketTravelerDetailResponse"
                    }
                },
                "total_amount": {
                    "type": "integer",
                    "example": 50000
                },
                "updated_at": {
                    "type": "string",
                    "example": "2023-05-17T15:07:16.504+07:00"
                }
            }
        },
        "dtos.TicketOrderStatusOKResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dtos.TicketOrderResponse"
                },
                "message": {
                    "type": "string",
                    "example": "Successfully get ticket order"
                },
                "status_code": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "dtos.TicketTravelerDetailInput": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string",
                    "example": "2023-05-31"
                },
                "station_destination_id": {
                    "type": "integer",
                    "example": 2
                },
                "station_origin_id": {
                    "type": "integer",
                    "example": 1
                },
                "train_carriage_id": {
                    "description": "TrainID              int    ` + "`" + `form:\"train_id\" json:\"train_id\" example:\"1\"` + "`" + `",
                    "type": "integer",
                    "example": 1
                },
                "train_seat_id": {
                    "type": "integer",
                    "example": 2
                }
            }
        },
        "dtos.TicketTravelerDetailOrderResponse": {
            "type": "object",
            "properties": {
                "boarding_ticket_code": {
                    "type": "string",
                    "example": "RANDOMBOARDINGTICKETCODE123"
                },
                "created_at": {
                    "type": "string",
                    "example": "2023-05-17T15:07:16.504+07:00"
                },
                "date": {
                    "type": "string",
                    "example": "2023-05-31"
                },
                "email_order": {
                    "type": "string",
                    "example": "me@hanifz.com"
                },
                "name_order": {
                    "type": "string",
                    "example": "Mochammad Hanif"
                },
                "payment": {
                    "$ref": "#/definitions/dtos.PaymentResponses"
                },
                "phone_number_order": {
                    "type": "string",
                    "example": "085115151515"
                },
                "quantity_adult": {
                    "type": "integer",
                    "example": 1
                },
                "quantity_infant": {
                    "type": "integer",
                    "example": 0
                },
                "station_destination": {
                    "$ref": "#/definitions/dtos.StationResponseSimply"
                },
                "station_origin": {
                    "$ref": "#/definitions/dtos.StationResponseSimply"
                },
                "status": {
                    "type": "string",
                    "example": "2023-05-31"
                },
                "ticket_order_code": {
                    "type": "string",
                    "example": "RANDOMCODE123"
                },
                "ticket_order_id": {
                    "type": "integer",
                    "example": 1
                },
                "train": {
                    "$ref": "#/definitions/dtos.TrainResponsesSimply"
                },
                "traveler_detail": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.TravelerDetailResponse"
                    }
                },
                "updated_at": {
                    "type": "string",
                    "example": "2023-05-17T15:07:16.504+07:00"
                },
                "user": {
                    "$ref": "#/definitions/dtos.UserInformationResponses"
                }
            }
        },
        "dtos.TicketTravelerDetailOrderStatusOKResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dtos.TicketTravelerDetailOrderResponse"
                },
                "message": {
                    "type": "string",
                    "example": "Successfully get ticket order"
                },
                "status_code": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "dtos.TicketTravelerDetailResponse": {
            "type": "object",
            "properties": {
                "boarding_ticket_code": {
                    "type": "string",
                    "example": "RANDOMBOARDINGTICKETCODE123"
                },
                "date": {
                    "type": "string",
                    "example": "2023-05-31"
                },
                "station_destination": {
                    "$ref": "#/definitions/dtos.StationResponseSimply"
                },
                "station_origin": {
                    "$ref": "#/definitions/dtos.StationResponseSimply"
                },
                "ticket_traveler_detail_id": {
                    "type": "integer",
                    "example": 1
                },
                "train": {
                    "$ref": "#/definitions/dtos.TrainResponsesSimply"
                },
                "traveler_detail": {
                    "$ref": "#/definitions/dtos.TravelerDetailResponse"
                }
            }
        },
        "dtos.TrainCarriageCreeatedResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dtos.TrainCarriageResponse"
                },
                "message": {
                    "type": "string",
                    "example": "Successfully created train carriage"
                },
                "status_code": {
                    "type": "integer",
                    "example": 201
                }
            }
        },
        "dtos.TrainCarriageInput": {
            "type": "object",
            "properties": {
                "class": {
                    "type": "string",
                    "example": "Ekonomi"
                },
                "name": {
                    "type": "string",
                    "example": "Gerbong 1"
                },
                "price": {
                    "type": "integer",
                    "example": 50000
                },
                "train_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dtos.TrainCarriageResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2023-05-17T15:07:16.504+07:00"
                },
                "name": {
                    "type": "string",
                    "example": "Gerbong 1"
                },
                "seat": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.TrainSeatResponse"
                    }
                },
                "train": {
                    "$ref": "#/definitions/dtos.TrainResponse"
                },
                "train_carriage_id": {
                    "type": "integer",
                    "example": 1
                },
                "updated_at": {
                    "type": "string",
                    "example": "2023-05-17T15:07:16.504+07:00"
                }
            }
        },
        "dtos.TrainCarriageResponses": {
            "type": "object",
            "properties": {
                "class": {
                    "type": "string",
                    "example": "Ekonomi"
                },
                "name": {
                    "type": "string",
                    "example": "Gerbong 1"
                },
                "seat": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.TrainSeatResponse"
                    }
                },
                "train_carriage_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dtos.TrainCarriageStatusOKResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dtos.TrainCarriageResponse"
                },
                "message": {
                    "type": "string",
                    "example": "Successfully get train carriage"
                },
                "status_code": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "dtos.TrainCreeatedResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dtos.TrainResponse"
                },
                "message": {
                    "type": "string",
                    "example": "Successfully created train"
                },
                "status_code": {
                    "type": "integer",
                    "example": 201
                }
            }
        },
        "dtos.TrainInput": {
            "type": "object",
            "properties": {
                "code_train": {
                    "type": "string",
                    "example": "TRAIN001"
                },
                "name": {
                    "type": "string",
                    "example": "Bengawan"
                },
                "route": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.TrainStationInput"
                    }
                },
                "status": {
                    "type": "string",
                    "example": "available"
                }
            }
        },
        "dtos.TrainResponse": {
            "type": "object",
            "properties": {
                "class": {
                    "type": "string",
                    "example": "Ekonomi"
                },
                "code_train": {
                    "type": "string",
                    "example": "TRAIN001"
                },
                "created_at": {
                    "type": "string",
                    "example": "2023-05-17T15:07:16.504+07:00"
                },
                "name": {
                    "type": "string",
                    "example": "Bengawan"
                },
                "price": {
                    "type": "integer",
                    "example": 50000
                },
                "route": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.TrainStationResponse"
                    }
                },
                "status": {
                    "type": "string",
                    "example": "available"
                },
                "train_carriage": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.TrainCarriageResponses"
                    }
                },
                "train_id": {
                    "type": "integer",
                    "example": 1
                },
                "updated_at": {
                    "type": "string",
                    "example": "2023-05-17T15:07:16.504+07:00"
                }
            }
        },
        "dtos.TrainResponses": {
            "type": "object",
            "properties": {
                "code_train": {
                    "type": "string",
                    "example": "TRAIN001"
                },
                "created_at": {
                    "type": "string",
                    "example": "2023-05-17T15:07:16.504+07:00"
                },
                "deleted_at": {
                    "type": "string",
                    "example": "2023-05-17T15:07:16.504+07:00"
                },
                "name": {
                    "type": "string",
                    "example": "Bengawan"
                },
                "route": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.TrainStationResponse"
                    }
                },
                "status": {
                    "type": "string",
                    "example": "available"
                },
                "train_id": {
                    "type": "integer",
                    "example": 1
                },
                "updated_at": {
                    "type": "string",
                    "example": "2023-05-17T15:07:16.504+07:00"
                }
            }
        },
        "dtos.TrainResponsesSimply": {
            "type": "object",
            "properties": {
                "class": {
                    "type": "string",
                    "example": "Ekonomi"
                },
                "code_train": {
                    "type": "string",
                    "example": "TRAIN001"
                },
                "name": {
                    "type": "string",
                    "example": "Bengawan"
                },
                "train_carriage": {
                    "type": "string",
                    "example": "Gerbong 1"
                },
                "train_carriage_id": {
                    "type": "integer",
                    "example": 1
                },
                "train_id": {
                    "type": "integer",
                    "example": 1
                },
                "train_price": {
                    "type": "integer",
                    "example": 50000
                },
                "train_seat": {
                    "type": "string",
                    "example": "A1"
                },
                "train_seat_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dtos.TrainSeatResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "example": "A1"
                }
            }
        },
        "dtos.TrainStationInput": {
            "type": "object",
            "properties": {
                "arrive_time": {
                    "type": "string",
                    "example": "00:00"
                },
                "station_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dtos.TrainStationResponse": {
            "type": "object",
            "properties": {
                "arrive_time": {
                    "type": "string"
                },
                "station": {
                    "$ref": "#/definitions/dtos.StationInput"
                },
                "station_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dtos.TrainStatusOKResponses": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dtos.TrainResponses"
                },
                "message": {
                    "type": "string",
                    "example": "Successfully get train"
                },
                "status_code": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "dtos.TravelerDetailInput": {
            "type": "object",
            "properties": {
                "full_name": {
                    "type": "string",
                    "example": "Mochammad Hanif"
                },
                "id_card_number": {
                    "type": "string",
                    "example": "1902389012801211"
                },
                "title": {
                    "type": "string",
                    "example": "Saudara"
                }
            }
        },
        "dtos.TravelerDetailResponse": {
            "type": "object",
            "properties": {
                "full_name": {
                    "type": "string",
                    "example": "Mochammad Hanif"
                },
                "id_card_number": {
                    "type": "string",
                    "example": "1902389012801211"
                },
                "title": {
                    "type": "string",
                    "example": "Saudara"
                },
                "traveler_detail_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dtos.UnauthorizedResponse": {
            "type": "object",
            "properties": {
                "errors": {},
                "message": {
                    "type": "string",
                    "example": "Unauthorized"
                },
                "status_code": {
                    "type": "integer",
                    "example": 401
                }
            }
        },
        "dtos.UserCreeatedResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dtos.UserInformationResponse"
                },
                "message": {
                    "type": "string",
                    "example": "Successfully registered"
                },
                "status_code": {
                    "type": "integer",
                    "example": 201
                }
            }
        },
        "dtos.UserInformationResponse": {
            "type": "object",
            "properties": {
                "birth_date": {
                    "type": "string",
                    "example": "2002-09-12"
                },
                "citizen": {
                    "type": "string",
                    "example": "Indonesia"
                },
                "created_at": {
                    "type": "string",
                    "example": "2023-05-17T15:07:16.504+07:00"
                },
                "deleted_at": {
                    "type": "string",
                    "example": "2023-05-17T15:07:16.504+07:00"
                },
                "email": {
                    "type": "string",
                    "example": "me@hanifz.com"
                },
                "full_name": {
                    "type": "string",
                    "example": "Mochammad Hanif"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "phone_number": {
                    "type": "string",
                    "example": "0851555555151"
                },
                "profile_picture_url": {
                    "type": "string",
                    "example": "https://icon-library.com/images/default-user-icon/default-user-icon-13.jpg"
                },
                "role": {
                    "type": "string",
                    "example": "user"
                },
                "token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdXRob3JpemVkIjp0cnVlLCJleHAiOjE2ODQ0MDYzMzMsInJvbGUiOiJ1c2VyIiwidXNlcklkIjozfQ.B8vBlMIiU4iZR0YHe4-Mo3DpJ2nwlTV3PuhEJc31pMo"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2023-05-17T15:07:16.504+07:00"
                }
            }
        },
        "dtos.UserInformationResponses": {
            "type": "object",
            "properties": {
                "birth_date": {
                    "type": "string",
                    "example": "2002-09-12"
                },
                "citizen": {
                    "type": "string",
                    "example": "Indonesia"
                },
                "email": {
                    "type": "string",
                    "example": "me@hanifz.com"
                },
                "full_name": {
                    "type": "string",
                    "example": "Mochammad Hanif"
                },
                "phone_number": {
                    "type": "string",
                    "example": "0851555555151"
                },
                "profile_picture_url": {
                    "type": "string",
                    "example": "https://icon-library.com/images/default-user-icon/default-user-icon-13.jpg"
                },
                "user_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dtos.UserLoginInput": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "me@hanifz.com"
                },
                "password": {
                    "type": "string",
                    "example": "qweqwe123"
                }
            }
        },
        "dtos.UserRegisterInput": {
            "type": "object",
            "properties": {
                "birth_date": {
                    "type": "string",
                    "example": "2002-09-12"
                },
                "confirm_password": {
                    "type": "string",
                    "example": "qweqwe123"
                },
                "email": {
                    "type": "string",
                    "example": "me@hanifz.com"
                },
                "full_name": {
                    "type": "string",
                    "example": "Mochammad Hanif"
                },
                "is_active": {
                    "type": "boolean",
                    "example": true
                },
                "password": {
                    "type": "string",
                    "example": "qweqwe123"
                },
                "phone_number": {
                    "type": "string",
                    "example": "0851555555151"
                },
                "role": {
                    "type": "string",
                    "example": "user"
                }
            }
        },
        "dtos.UserStatusOKResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dtos.UserInformationResponse"
                },
                "message": {
                    "type": "string",
                    "example": "Successfully get user credentials"
                },
                "status_code": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "dtos.UserUpdatePasswordInput": {
            "type": "object",
            "properties": {
                "confirm_password": {
                    "type": "string",
                    "example": "asdqwe123"
                },
                "new_password": {
                    "type": "string",
                    "example": "asdqwe123"
                },
                "old_password": {
                    "type": "string",
                    "example": "qweqwe123"
                }
            }
        },
        "dtos.UserUpdateProfileInput": {
            "type": "object",
            "properties": {
                "birth_date": {
                    "type": "string",
                    "example": "2000-01-01"
                },
                "citizen": {
                    "type": "string",
                    "example": "Indonesia"
                },
                "full_name": {
                    "type": "string",
                    "example": "Hanif Mochammad"
                },
                "phone_number": {
                    "type": "string",
                    "example": "085199999999"
                }
            }
        },
        "helpers.Meta": {
            "type": "object",
            "properties": {
                "current_page": {
                    "type": "integer",
                    "example": 1
                },
                "next_page": {},
                "prev_page": {
                    "type": "integer",
                    "example": 1
                },
                "total": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "models.Url": {
            "type": "object",
            "required": [
                "url"
            ],
            "properties": {
                "url": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8088",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Tripease API Documentation",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
